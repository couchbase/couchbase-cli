'\" t
.\"     Title: couchbase-cli-analytics-link-setup
.\"    Author: Couchbase
.\" Generator: Asciidoctor 2.0.16
.\"      Date: 2021-10-26
.\"    Manual: Couchbase CLI Manual
.\"    Source: Couchbase CLI 1.0.0
.\"  Language: English
.\"
.TH "COUCHBASE\-CLI\-ANALYTICS\-LINK\-SETUP" "1" "2021-10-26" "Couchbase CLI 1.0.0" "Couchbase CLI Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
couchbase-cli-analytics-link-setup \- Manage Analytics links
.SH "SYNOPSIS"
.sp
.nf
\fIcouchbase\-cli analytics\-link\-setup\fP [\-\-cluster <cluster>] [\-\-username <username>]
    [\-\-password <password>] [\-\-client\-cert <path>] [\-\-client\-cert\-password <password>]
    [\-\-client\-key <path>] [\-\-client\-key\-password <password>] [\-\-create] [\-\-delete]
    [\-\-edit] [\-\-list] [\-\-dataverse <name>] [\-\-scope <name>] [\-\-name <name>] [\-\-type <type>]
    [\-\-hostname <hostname>] [\-\-link\-username <username>] [\-\-link\-password <password>]
    [\-\-user\-certificate <path>] [\-\-user\-key <path>] [\-\-user\-key\-passphrase <path>]
    [\-\-certificate <path>] [\-\-encryption <type>] [\-\-access\-key\-id <id>]
    [\-\-secret\-access\-key <key>] [\-\-session\-token <token>] [\-\-region <region>]
    [\-\-service\-endpoint <url>] [\-\-connection\-string <key>] [\-\-account\-name <id>]
    [\-\-account\-key <key>] [\-\-shared\-access\-signature <token>] [\-\-blob\-endpoint <url>]
    [\-\-endpoint\-suffix <url>]
.fi
.br
.SH "DESCRIPTION"
.sp
This command is used to manage links used by the external dataset and remote
cluster capabilities of the Analytics Service.
.SH "OPTIONS"
.SS "Common Link Options"
.sp
\-c, \-\-cluster
.RS 4
Specifies the hostname of a node in the cluster. See the HOST FORMATS
section for more information on specifying a hostname.
.RE
.sp
\-u, \-\-username <username>
.RS 4
Specifies the username of the user executing the command. If you do not have
a user account with permission to execute the command then it will fail with
an unauthorized error.
.RE
.sp
\-p, \-\-password <password>
.RS 4
Specifies the password of the user executing the command. If you do not have
a user account with permission to execute the command then it will fail with
an unauthorized error. If this argument is specified, but no password is
given then the command will prompt the user for a password through
non\-echoed stdin. You may also specify your password by using the
environment variable CB_REST_PASSWORD.
.RE
.sp
\-\-client\-cert <path>
.RS 4
The path to a client certificate used to authenticate when connecting to a
cluster. May be supplied with \f(CR\-\-client\-key\fP as an alternative to the
\f(CR\-\-username\fP and \f(CR\-\-password\fP flags.  See the CERTIFICATE AUTHENTICATION
section for more information.
.RE
.sp
\-\-client\-cert\-password <password>
.RS 4
The password for the certificate provided to the \f(CR\-\-client\-cert\fP flag, when
using this flag, the certificate/key pair is expected to be in the PKCS#12
format. See the CERTIFICATE AUTHENTICATION section for more information.
.RE
.sp
\-\-client\-key <path>
.RS 4
The path to the client private key whose public key is contained in the
certificate provided to the \f(CR\-\-client\-cert\fP flag. May be supplied with
\f(CR\-\-client\-cert\fP as an alternative to the \f(CR\-\-username\fP and \f(CR\-\-password\fP
flags. See the CERTIFICATE AUTHENTICATION section for more information.
.RE
.sp
\-\-client\-key\-password <password>
.RS 4
The password for the key provided to the \f(CR\-\-client\-key\fP flag, when using this
flag, the key is expected to be in the PKCS#8 format.  See the CERTIFICATE
AUTHENTICATION section for more information.
.RE
.sp
\-\-create
.RS 4
Creates a new link.
.RE
.sp
\-\-delete
.RS 4
Deletes a link.
.RE
.sp
\-\-edit
.RS 4
Edits a link.
.RE
.sp
\-\-list
.RS 4
List defined links.
.RE
.sp
\-\-name <name>
.RS 4
The name for the link.
.RE
.sp
\-\-type <type>
.RS 4
The type of the link. It can be \*(Aqcouchbase\*(Aq, \*(Aqs3\*(Aq or \*(Aqazureblob\*(Aq.
.RE
.sp
\-\-dataverse <name>
.RS 4
(Deprecated) The dataverse of the link. Use \-\-scope instead.
.RE
.sp
\-\-scope <name>
.RS 4
The scope of the link in its canonical form.  The canonical form of a
scope is each part of the form, joined with a \*(Aq/\*(Aq character.  e.g. the
canonical form of the scope \*(Aq`remote.links`.s3\*(Aq would be represented as
\*(Aqremote.links/s3\*(Aq
.RE
.SS "Couchbase Link Options"
.sp
Following are the options specific to \fB\-\-type couchbase\fP, i.e. Couchbase
links
.sp
\-\-hostname <hostname>
.RS 4
The hostname of the link.
.RE
.sp
\-\-encryption <type>
.RS 4
Specifies the type of encryption to use. This flag may be set to \*(Aqhalf\*(Aq,
\*(Aqfull\*(Aq, or \*(Aqnone\*(Aq. Half encryption means that passwords are encrypted,
but data is not. This results in faster data transfer, but less security.
Full encryption means that all data and passwords are encrypted which
increases security, but reduces overall data transfer speed. If no
encryption is needed then "none" can be specified.
.RE
.sp
\-\-link\-username <username>
.RS 4
The username of the link.
.RE
.sp
\-\-link\-password <password>
.RS 4
The password of the link.
.RE
.sp
\-\-user\-certificate <path>
.RS 4
The local path to the file containing the user certificate for authentication.
This and \fB\-\-user\-key\fP are used in place of \fB\-\-link\-username\fP and
\fB\-\-link\-password\fP when utilizing certificate\-based authentication.
Certificate\-based auth requires \fB\-\-encryption full\fP.
.RE
.sp
\-\-user\-key <path>
.RS 4
The local path to the file containing the user key for authentication. This
and \fB\-\-user\-certificate\fP are used in place of \fB\-\-link\-username\fP and
\fB\-\-link\-password\fP when utilizing certificate\-based authentication.
Certificate\-based auth requires \fB\-\-encryption full\fP.
.RE
.sp
\-\-user\-key\-passphrase <path>
.RS 4
The local path to a JSON file containing the private key passphrase settings,
see below for examples for the accepted configurations.  Required when using
\fB\-\-encryption full\fP with Certificate\-based auth, where the specified
\fB\-\-user\-key\fP is encrypted.
.RE
.sp
When sending a plain text password, the file may look something like the one
below. Note that plain passphrases will be encrypted with secret management
when arrives to the server, but will be transmitted unencrypted (unless HTTPS
is used)
.sp
.if n .RS 4
.nf
.fam C
{
  "type": "plain",
  "password": "asdasd"
}
.fam
.fi
.if n .RE
.sp
When using a REST call to fetch the password, the file may look similar to the
one below.
.sp
.if n .RS 4
.nf
.fam C
{
  "type": "rest",
  "url": "<url to call>",
  "httpsOpts": {
    "verifyPeer": true
  },
  "timeout": 5000
}
.fam
.fi
.if n .RE
.sp
\-\-certificate <path>
.RS 4
The local path to the file containing the certificate used for encryption.
Required with \fB\-\-encryption full\fP.
.RE
.SS "S3 Link Options"
.sp
Following are the options specific to \fB\-\-type s3\fP, i.e. S3 links
.sp
\-\-access\-key\-id <id>
.RS 4
The access key ID of the s3 link.
.RE
.sp
\-\-secret\-access\-key <key>
.RS 4
The secret access key of the s3 link.
.RE
.sp
\-\-session\-token <token>
.RS 4
The session token of the s3 link. This is used when Multi\-Factor Authentication
(MFA) temporary credentials are used.
.RE
.sp
\-\-region <region>
.RS 4
The region of the s3 link.
.RE
.sp
\-\-service\-endpoint <url>
.RS 4
The service endpoint of the link (optional).
.RE
.SS "Azure Blob Link Options"
.sp
Following are the options specific to \fB\-\-type azureblob\fP, i.e. Azure Blob links. Only a single authentication
method is allowed to be provided at the same time. If anonymous authentication (no authentication) is desired,
then none of the authentication parameters should be provided.
.sp
\-\-account\-name <id>
.RS 4
The account name of the link. This property needs to be provided together with the \-\-account\-key.
.RE
.sp
\-\-account\-key <key>
.RS 4
The account key of the link. This property needs to be provided together with the \-\-account\-name.
.RE
.sp
\-\-shared\-access\-signature <token>
.RS 4
The shared access signature of the link.
.RE
.sp
\-\-managed\-identity\-id <id>
.RS 4
The managed identity id of the link.
.RE
.sp
\-\-client\-id <id>
.RS 4
The client id of the link. This property needs to be provided together with the \-\-tenant\-id and either
the \-\-client\-secret or \-\-client\-certificate.
.RE
.sp
\-\-client\-secret <key>
.RS 4
The client secret of the link. This property needs to be provided together with the \-\-client\-id and
the \-\-tenant\-id.
.RE
.sp
\-\-client\-certificate <key>
.RS 4
The client certificate of the link. This property needs to be provided together with the \-\-client\-id and
the \-\-tenant\-id. If the client certificate is password protected, then the \-\-client\-certificate\-password
property needs to be provided as well.
.RE
.sp
\-\-client\-certificate\-password <key>
.RS 4
The client certificate password of the link. This property is provided if the provided \-\-client\-certificate
is password protected.
.RE
.sp
\-\-tenant\-id <id>
.RS 4
The tenant id of the link. This property is provided together with the \-\-client\-id.
.RE
.sp
\-\-endpoint <url>
.RS 4
The endpoint of the link (required).
.RE
.SH "HOST FORMATS"
.sp
When specifying a host for the couchbase\-cli command the following formats are expected:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CRcouchbase://<addr>\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CR<addr>:<port>\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CRhttp://<addr>:<port>\fP
.RE
.sp
It is recommended to use the couchbase://<addr> format for standard
installations. The other two formats allow an option to take a port number which
is needed for non\-default installations where the admin port has been set up on
a port other that 8091.
.SH "CERTIFICATE AUTHENTICATION (MTLS AUTHENTICATION)"
.sp
This tool supports authenticating against a Couchbase Cluster by using certificate based authentication (mTLS
authentication). To use certificate based authentication a certificate/key must be supplied, there a currently
multiple ways this may be done.
.SS "PEM ENCODED CERTIFICATE/KEY"
.sp
An unencrypted PEM encoded certificate/key may be supplied by using:
\- \f(CR\-\-client\-cert <path>\fP
\- \f(CR\-\-client\-key <path>\fP
.sp
The file passed to \f(CR\-\-client\-cert\fP must contain the client certificate, and an optional chain required to authenticate
the client certificate.
.sp
The file passed to \f(CR\-\-client\-key\fP must contain at most one private key, the key can be in one of the following formats:
\- PKCS#1
\- PKCS#8
.sp
Currently, only the following key types are supported:
\- RSA
\- DSA
.SS "PEM ENCODED CERTIFICATE/PEM OR DER ENCRYPTED PKCS#8 KEY"
.sp
An encrypted PKCS#8 formatted key may be provided using:
\- \f(CR\-\-client\-cert <path>\fP
\- \f(CR\-\-client\-key <path>\fP
\- \f(CR\-\-client\-key\-password <password>\fP
.sp
The file passed to \f(CR\-\-client\-cert\fP must contain the client certificate, and an optional chain required to authenticate
the client certificate.
.sp
Currently, only the following key types are supported:
\- RSA
\- DSA
.SS "ENCRYPTED PKCS#12 CERTIFICATE/KEY"
.sp
An encrypted PKCS#12 certificate/key may be provided using:
\- \f(CR\-\-client\-cert <path>\fP
\- \f(CR\-\-client\-cert\-password <password>\fP
.sp
The file passed to \f(CR\-\-client\-cert\fP must contain the client certificate and exactly one private key. It may also contain
the chain required to authenticate the client certificate.
.sp
Currently, only the following key types are supported:
\- RSA
\- DSA
.SH "EXAMPLES"
.sp
To create a new link to a Couchbase cluster named "east", run the
following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-create \-\-scope Default \-\-name east \-\-type couchbase \(rs
 \-\-hostname 192.168.1.6 \-\-link\-username Administrator \(rs
 \-\-link\-password password \-\-encryption none
.fam
.fi
.if n .RE
.sp
If the new remote reference should be fully encrypted then make sure to enable
encryption:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-create \-\-scope Default \-\-name east \-\-type couchbase \(rs
 \-\-hostname 192.168.1.6 \-\-link\-username Administrator \(rs
 \-\-link\-password password \-\-encryption full \(rs
 \-\-certificate /root/cluster.cert
.fam
.fi
.if n .RE
.sp
To create an S3 link named \f(CRmyAwsLink\fP in the "`remote.links`.s3" scope, run
the following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-create \-\-scope remote.links/s3 \-\-name myAwsLink \-\-type s3 \(rs
 \-\-region us\-west\-2 \-\-access\-key\-id LOREMIPSUMDOLORSITAMET123 \(rs
 \-\-secret\-access\-key CoNSEcteTuRadipIsciNGelITSEDDoeiUSmODTEMpor456
.fam
.fi
.if n .RE
.sp
To create an S3 link named \f(CRmyAwsLink\fP in the "`remote.links`.s3" scope, with
temporary S3 credentials, run the following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-create \-\-scope remote.links/s3 \-\-name myAwsLink \-\-type s3 \(rs
 \-\-region us\-west\-2 \-\-access\-key\-id myTemporaryAccessKeyId \(rs
 \-\-secret\-access\-key myTemporarySecretAccessKey \(rs
 \-\-session\-token myTemporarySessionToken
.fam
.fi
.if n .RE
.sp
To create an AzureBlob link named \f(CRmyAzureBlobLink\fP in the "`remote.links`.azure"
scope, using \fB"account name and account key"\fP for authentication, run the
following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-create \-\-scope remote.links/azure \-\-name myAzureBlobLink \-\-type \(rs
 azureblob \-\-account\-name myAccountName \-\-account\-key myAccountKey \-\-endpoint myendpoint.com
.fam
.fi
.if n .RE
.sp
To create an AzureBlob link named \f(CRmyAzureBlobLink\fP in the "`remote.links`.azure"
scope, using \fB"shared access signature"\fP for authentication,
run the following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-create \-\-scope remote.links/azure \-\-name myAzureBlobLink \-\-type \(rs
 azureblob \-\-shared\-access\-signature mySharedAccessSignature \-\-endpoint myendpoint.com
.fam
.fi
.if n .RE
.sp
To create an AzureBlob link named \f(CRmyAzureBlobLink\fP in the "`remote.links`.azure"
scope, using \fB"managed identity id"\fP for authentication, run the following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-create \-\-scope remote.links/azure \-\-name myAzureBlobLink \-\-type \(rs
 azureblob \-\-managed\-identity\-id myManagedIdentityId \-\-endpoint myendpoint.com
.fam
.fi
.if n .RE
.sp
To create an AzureBlob link named \f(CRmyAzureBlobLink\fP in the "`remote.links`.azure"
scope, using \fB"client id and client secret"\fP for authentication, run the following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
\-p password \-\-create \-\-scope remote.links/azure \-\-name myAzureBlobLink \-\-type \(rs
azureblob \-\-client\-id myClientId \-\-client\-secret myClientSecret \-\-endpoint myendpoint.com
.fam
.fi
.if n .RE
.sp
To create an AzureBlob link named \f(CRmyAzureBlobLink\fP in the "`remote.links`.azure"
scope, using \fB"client id and client certificate"\fP for authentication, run the following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
\-p password \-\-create \-\-scope remote.links/azure \-\-name myAzureBlobLink \-\-type \(rs
azureblob \-\-client\-id myClientId \-\-client\-certificate myClientCertificate \-\-endpoint myendpoint.com
.fam
.fi
.if n .RE
.sp
To list all current links, run the following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-list
.fam
.fi
.if n .RE
.sp
To list current S3 links, run the following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-list \-\-type s3
.fam
.fi
.if n .RE
.sp
To list current AzureBlob links, run the following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-list \-\-type azureblob
.fam
.fi
.if n .RE
.sp
If you need to edit a link named "east" and change the password, run the
following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-edit \-\-scope Default \-\-name east \-\-type couchbase \(rs
 \-\-hostname 192.168.1.6 \-\-link\-username Administrator \(rs
 \-\-link\-password new_password \-\-encryption half
.fam
.fi
.if n .RE
.sp
Note in the above example that you need to re\-specify all of the current
unchanging configuration parameters in addition to changing ones, except
\fB\-\-type\fP which cannot change.
.sp
If a link is no longer needed it can be deleted. The following example
deletes the link named "east" in the "Default" scope:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli analytics\-link\-setup \-c 192.168.1.5 \-u Administrator \(rs
 \-p password \-\-delete \-\-scope Default \-\-link east
.fam
.fi
.if n .RE
.SH "ENVIRONMENT AND CONFIGURATION VARIABLES"
.sp
CB_REST_USERNAME
.RS 4
Specifies the username to use when executing the command. This environment
variable allows you to specify a default argument for the \-u/\-\-username
argument on the command line.
.RE
.sp
CB_REST_PASSWORD
.RS 4
Specifies the password of the user executing the command. This environment
variable allows you to specify a default argument for the \-p/\-\-password
argument on the command line. It also allows the user to ensure that their
password are not cached in their command line history.
.RE
.sp
CB_CLIENT_CERT
.RS 4
The path to a client certificate used to authenticate when connecting to a
cluster. May be supplied with \f(CRCB_CLIENT_KEY\fP as an alternative to the
\f(CRCB_USERNAME\fP and \f(CRCB_PASSWORD\fP variables. See the CERTIFICATE AUTHENTICATION
section for more information.
.RE
.sp
CB_CLIENT_CERT_PASSWORD
.RS 4
The password for the certificate provided to the \f(CRCB_CLIENT_CERT\fP variable,
when using this variable, the certificate/key pair is expected to be in the
PKCS#12 format. See the CERTIFICATE AUTHENTICATION section for more
information.
.RE
.sp
CB_CLIENT_KEY
.RS 4
The path to the client private key whose public key is contained in the
certificate provided to the \f(CRCB_CLIENT_CERT\fP variable. May be supplied with
\f(CRCB_CLIENT_CERT\fP as an alternative to the \f(CRCB_USERNAME\fP and \f(CRCB_PASSWORD\fP
variables. See the CERTIFICATE AUTHENTICATION section for more information.
.RE
.sp
CB_CLIENT_KEY_PASSWORD
.RS 4
The password for the key provided to the \f(CRCB_CLIENT_KEY\fP variable, when using
this variable, the key is expected to be in the PKCS#8 format.  See the
CERTIFICATE AUTHENTICATION section for more information.
.RE
.SH "COUCHBASE\-CLI"
.sp
Part of the \fBcouchbase\-cli\fP(1) suite
.SH "AUTHOR"
.sp
Couchbase
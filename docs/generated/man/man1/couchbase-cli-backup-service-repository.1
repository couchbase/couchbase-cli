'\" t
.\"     Title: couchbase-cli-backup-service-repository
.\"    Author: Couchbase
.\" Generator: Asciidoctor 2.0.16
.\"      Date: 2021-10-21
.\"    Manual: Couchbase CLI Manual
.\"    Source: Couchbase CLI 1.0.0
.\"  Language: English
.\"
.TH "COUCHBASE\-CLI\-BACKUP\-SERVICE\-REPOSITORY" "1" "2021-10-21" "Couchbase CLI 1.0.0" "Couchbase CLI Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
couchbase-cli-backup-service-repository \- Manage the backup service repositories.
.SH "SYNOPSIS"
.sp
.nf
_couchbase\-cli backup\-service [\-\-cluster <url>] [\-\-username <user>]
    [\-\-password <password>] [\-\-client\-cert <path>] [\-\-client\-cert\-password <password>]
    [\-\-client\-key <path>] [\-\-client\-key\-password <password>]
    [\-\-output] repository [\-\-list] [\-\-get] [\-\-archive]
    [\-\-add] [\-\-remove] [\-\-id <id>] [\-\-new\-id <id>] [\-\-state <state>]
    [\-\-profile <name>] [\-\-backup\-archive <archive>] [\-\-bucket\-name <name>]
    [\-\-cloud\-credentials\-name <name>] [\-\-cloud\-staging\-dir <path>]
    [\-\-cloud\-credentials\-id <id>] [\-\-cloud\-credentials\-key <key>]
    [\-\-cloud\-credentials\-region <region>] [\-\-cloud\-endpoint <endpoint>]
    [\-\-s3\-force\-path\-style] [\-\-remove\-data]
.fi
.br
.SH "DESCRIPTION"
.sp
Manage backup service repositories
.SH "ACTION OPTIONS"
.sp
\-\-list
.RS 4
List the backup repositories.
.RE
.sp
\-\-get
.RS 4
Get a specific backup repository.
.RE
.sp
\-\-archive
.RS 4
Archives an active repository. This will move the repository into a read only mode.
This operation cannot be undone.
.RE
.sp
\-\-add
.RS 4
Add a new active backup repository.
.RE
.sp
\-\-remove
.RS 4
Remove an archived or imported repository. This operation cannot be undone.
.RE
.SH "OPTIONS"
.sp
\-\-id <id>
.RS 4
Specify the repository id.
.RE
.sp
\-\-new\-id <id>
.RS 4
Used together with the \f(CR\-\-archive\fP action flag to specify the new id for the repository
once it is archived.
.RE
.sp
\-\-state <state>
.RS 4
Specifies the repository state. Valid states are \*(Aqactive\*(Aq, \*(Aqarchived\*(Aq or \*(Aqimported\*(Aq
.RE
.sp
\-\-profile <profile_name>
.RS 4
Specify the profile to use when adding a new repository.
.RE
.sp
\-\-backup\-archive <archive>
.RS 4
The location to store backups in. This location should be accessible by all backup
nodes. To use S3 or S3 compatible storages the archive must be in the format:
\f(CRs3://<bucket>/<optional_prefix>/<archive>\fP.
.RE
.sp
\-\-bucket\-name <name>
.RS 4
When adding a repository a bucket name can be supplied so that the repository only
backups that bucket.
.RE
.sp
\-\-remove\-data
.RS 4
When removing an archived repository this option can be given to also delete the
underlying backup repository and all of its data. This cannot be undone.
.RE
.SH "CLOUD OPTIONS"
.sp
\-\-cloud\-credentials\-name <name>
.RS 4
The identifying name for a set of credentials already stored in the service.
.RE
.sp
\-\-cloud\-credentials\-id <id>
.RS 4
The id to use with the object store.
.RE
.sp
\-\-cloud\-credentials\-key <key>
.RS 4
The key to use with the object store.
.RE
.sp
\-\-cloud\-credentials\-region <region>
.RS 4
The region for the object store.
.RE
.sp
\-\-cloud\-endpoint <endpoint>
.RS 4
Overrides the default endpoint used to communicate with the cloud provider. Use for
object store compatible third party solutions.
.RE
.sp
\-\-s3\-force\-path\-style
.RS 4
When using S3 or S3 compatible storage it will use the old path style.
.RE
.SH "HOST FORMATS"
.sp
When specifying a host for the couchbase\-cli command the following formats are expected:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CRcouchbase://<addr>\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CR<addr>:<port>\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CRhttp://<addr>:<port>\fP
.RE
.sp
It is recommended to use the couchbase://<addr> format for standard
installations. The other two formats allow an option to take a port number which
is needed for non\-default installations where the admin port has been set up on
a port other that 8091.
.SH "CERTIFICATE AUTHENTICATION (MTLS AUTHENTICATION)"
.sp
This tool supports authenticating against a Couchbase Cluster by using certificate based authentication (mTLS
authentication). To use certificate based authentication a certificate/key must be supplied, there a currently
multiple ways this may be done.
.SS "PEM ENCODED CERTIFICATE/KEY"
.sp
An unencrypted PEM encoded certificate/key may be supplied by using:
\- \f(CR\-\-client\-cert <path>\fP
\- \f(CR\-\-client\-key <path>\fP
.sp
The file passed to \f(CR\-\-client\-cert\fP must contain the client certificate, and an optional chain required to authenticate
the client certificate.
.sp
The file passed to \f(CR\-\-client\-key\fP must contain at most one private key, the key can be in one of the following formats:
\- PKCS#1
\- PKCS#8
.sp
Currently, only the following key types are supported:
\- RSA
\- DSA
.SS "PEM ENCODED CERTIFICATE/PEM OR DER ENCRYPTED PKCS#8 KEY"
.sp
An encrypted PKCS#8 formatted key may be provided using:
\- \f(CR\-\-client\-cert <path>\fP
\- \f(CR\-\-client\-key <path>\fP
\- \f(CR\-\-client\-key\-password <password>\fP
.sp
The file passed to \f(CR\-\-client\-cert\fP must contain the client certificate, and an optional chain required to authenticate
the client certificate.
.sp
Currently, only the following key types are supported:
\- RSA
\- DSA
.SS "ENCRYPTED PKCS#12 CERTIFICATE/KEY"
.sp
An encrypted PKCS#12 certificate/key may be provided using:
\- \f(CR\-\-client\-cert <path>\fP
\- \f(CR\-\-client\-cert\-password <password>\fP
.sp
The file passed to \f(CR\-\-client\-cert\fP must contain the client certificate and exactly one private key. It may also contain
the chain required to authenticate the client certificate.
.sp
Currently, only the following key types are supported:
\- RSA
\- DSA
.SH "EXAMPLES"
.SS "Retrieving repository information"
.sp
To retrieve a summary of all repositories run:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli backup\-service \-c 127.0.0.1:8091 \-u Administrator \-p password \(rs
  repository \-\-list
ID            | State    | Profile | Healthy | Repository"
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
weekly\-all    | active   | _weekly |  True   | a8059549\-7fc3\-401a\-8fb8\-008d1e20f1b0
old\-data      | archived | _daily  |  True   | d6ccec04\-6f03\-4599\-94c5\-b95ac10a4f80
test\-data\-set | imported | N/A     |  True   | provider
.fam
.fi
.if n .RE
.sp
You can also filter to only get repositories in certain state by using the \f(CR\-\-state\fP flag. If you want more in\-depth
details for the repository use the JSON output as can be seen below:
.sp
To set the backup service configuration use the \f(CR\-\-set\fP flag and any of the configuration flags for example:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli backup\-service \-c 127.0.0.1:8091 \-u Administrator \-p password  \-\-output json \(rs
  repository \-\-list \-\-state active
{
  "active": [
    {
      "id": "weekly\-all",
      "profile_name": "_weekly",
      "state": "active",
      "archive": "/backup",
      "repo": "a8059549\-7fc3\-401a\-8fb8\-008d1e20f1b0",
      "scheduled": {
        "backup_monday_full": {
          "name": "backup_monday_full",
          "task_type": "BACKUP",
          "next_run": "2020\-07\-13T22:00:00+01:00"
        },
        "backup_wednesday": {
          "name": "backup_wednesday",
          "task_type": "BACKUP",
          "next_run": "2020\-07\-15T22:00:00+01:00"
        },
        "merge_week": {
          "name": "merge_week",
          "task_type": "MERGE",
          "next_run": "2020\-07\-12T23:20:00+01:00"
        }
      },
      "version": 1,
      "health": {
        "healthy": true
      },
      "creation_time": "2020\-07\-10T07:44:18.826195+01:00",
      "update_time": "2020\-07\-10T07:44:18.826195+01:00"
    }
  ]
}
.fam
.fi
.if n .RE
.sp
To retrieve just the information for one repository used instead the \f(CR\-\-get\fP action flag as
illustrated below.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli backup\-service \-c http://127.0.0.1:8091 \-u Administrator \-p password \(rs
  repository \-\-get \-\-id weekly\-all \-\-state active
ID: weekly\-all
State: active
Healthy: True
Archive: /backup
Repository: a8059549\-7fc3\-401a\-8fb8\-008d1e20f1b0
Profile: _weekly
Creation time: 2020\-07\-10T07:44:18.826195+01:00

Scheduled tasks:
Name               | Task type | Next run
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
backup_monday_full | Backup    | 2020\-07\-13T22:00:00+01:00
backup_wednesday   | Backup    | 2020\-07\-15T22:00:00+01:00
merge_week         | Merge     | 2020\-07\-12T23:20:00+01:00
.fam
.fi
.if n .RE
.sp
As before you can retrieve all details in JSON format by using \f(CR\-\-output json\fP before the
repository subcommand.
.SS "Adding and modifying repositories"
.sp
To add an repository one can use the \f(CR\-\-add action\fP flag as shown below.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli backup\-service \-c http://127.0.0.1:8091 \-u Administrator \-p password \(rs
  repository \-\-add \-\-id new\-repository \-\-profile _weekly \-\-backup\-archive /backup/service
.fam
.fi
.if n .RE
.sp
In the command above we are adding a new repository with name \f(CRnew\-repository\fP that is using a
base profile \f(CR_weekly\fP. The base profile defines the schedules of the tasks that the
repository will run as well as what services it will backup. Finally the backup archive is the
location where the backups will stored. This location is equivalent to a cbbackupmgr
archive. Two repository should \fBnot\fP use the same archive. Also \f(CRcbbackupmgr\fP should \fBnot\fP
be run on the archives managed by the service directly.
.sp
If you want an repository that only backs up one bucket or want different backup schedules
for each bucket this can be achieved by using the \f(CR\-\-bucket\-name\fP argument to specify
which bucket the repository should backup. An example can be seen below.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli backup\-service \-c http://127.0.0.1:8091 \-u Administrator \-p password \(rs
  repository \-\-add \-\-id new\-repository \-\-profile _weekly \-\-backup\-archive /backup/service \(rs
  \-\-bucket\-name beer\-sample
.fam
.fi
.if n .RE
.sp
The service also supports creating cloud backup repositories. These are repositories that backup
directly to object store. Currently, the only supported object store is S3 and S3
compatible stores. To create a cloud repository you will need to supply some more details,
as illustrated in the example below.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli \-c http://127.0.0.1:8091 \-u Administrator \-p password \(rs
  repository \-\-add \-\-id cloud\-repository \-\-profile _daily \-\-backup\-archive s3://cloud\-bucket/archive \(rs
  \-\-cloud\-staging\-dir /backup/staging \-\-cloud\-credentials\-id id \-\-cloud\-credentials\-key key \(rs
  \-\-cloud\-credentials\-region us\-east\-1
.fam
.fi
.if n .RE
.sp
In the command above we can see that the archive supplied for cloud must start with the
schema \f(CRs3://\fP followed by the bucket name, after, the path to the archive in S3 must be
given. A \fBstaging directory\fP must also be supplied. This is a location where cbbackupmgr
will temporarily store data whilst doing cloud backups. This path must be available in
all backup nodes and should have space for roughly 10% of the data set size as reported
by the UI. In the command above we have also supplied the cloud credential ID, key and
region. This are the details that will be used to communicate with S3. Note that
credentials can be stored and reused in the backup service so if you already have
the correct set of credentials stored you can replace the id, key and region flags by
\f(CR\-\-cloud\-credential\-name\fP and give the name of the credential set you want to re\-use.
.sp
Finally, for S3 compatible stores you can use the \f(CR\-\-cloud\-endpoint\fP argument to override
the endpoint use to communicate with S3 and point it to your storage solution address.
Some S3 compatible storages only support the old S3 path styles to use those supply the
\f(CRs3\-force\-path\-style\fP argument.
.sp
To archive an repository you can use the command below. Archiving an repository moves the
repository to read\-only mode. This means that no more backup tasks will be run. The
repository can still be restored and the data examined but not altered. This action is not
reversible.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli backup\-service \-c http://127.0.0.1:8091 \-u Administrator \-p password \(rs
  repository \-\-archive \-\-id active\-repository \-\-new\-id deprecated
.fam
.fi
.if n .RE
.sp
The last way in which can modify an repository is by removing it. Only archived and imported
repositories can be removed. If you want to remove an active repository you first have to
archive it as explained above. To remove an repository use the command below. Note that this
operation cannot be undone.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli backup\-service \-c http://127.0.0.1:8091 \-u Administrator \-p password \(rs
  repository \-\-remove \-\-id repository \-\-state imported
.fam
.fi
.if n .RE
.sp
Note that by default this command only removes the repository from the service but does
\fBnot\fP remove the backup repository. The flag \f(CR\-\-remove\-data\fP allows you to also delete
the underlying data. This argument can only be used with archived repositories as imported
ones could still be in use by another node. To remove the data as well follow the example
below, note that once the data is deleted it cannot be recovered.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli backup\-service \-c http://127.0.0.1:8091 \-u Administrator \-p password \(rs
  repository \-\-remove \-\-id other_repository \-\-state archived \-\-remove\-data
.fam
.fi
.if n .RE
.SH "ENVIRONMENT AND CONFIGURATION VARIABLES"
.sp
CB_REST_USERNAME
.RS 4
Specifies the username to use when executing the command. This environment
variable allows you to specify a default argument for the \-u/\-\-username
argument on the command line.
.RE
.sp
CB_REST_PASSWORD
.RS 4
Specifies the password of the user executing the command. This environment
variable allows you to specify a default argument for the \-p/\-\-password
argument on the command line. It also allows the user to ensure that their
password are not cached in their command line history.
.RE
.SH "SEE ALSO"
.sp
\fBcouchbase\-cli\-backup\-service\fP(1)
.SH "COUCHBASE\-CLI"
.sp
Part of the \fBcouchbase\-cli\fP(1) suite
.SH "AUTHOR"
.sp
Couchbase
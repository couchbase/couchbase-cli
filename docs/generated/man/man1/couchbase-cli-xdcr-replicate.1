'\" t
.\"     Title: couchbase-cli-xdcr-replicate
.\"    Author: Couchbase
.\" Generator: Asciidoctor 2.0.16
.\"      Date: 2021-10-22
.\"    Manual: Couchbase CLI Manual
.\"    Source: Couchbase CLI 1.0.0
.\"  Language: English
.\"
.TH "COUCHBASE\-CLI\-XDCR\-REPLICATE" "1" "2021-10-22" "Couchbase CLI 1.0.0" "Couchbase CLI Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
couchbase-cli-xdcr-replicate \- Creates a replication between two data centers
.SH "SYNOPSIS"
.sp
.nf
\fIcouchbase\-cli xdcr\-replicate\fP [\-\-cluster <url>] [\-\-username <user>] [\-\-password <password>]
    [\-\-client\-cert <path>] [\-\-client\-cert\-password <password>] [\-\-client\-key <path>]
    [\-\-client\-key\-password <password>] [\-\-create] [\-\-delete] [\-\-pause] [\-\-list]
    [\-\-resume] [\-\-settings] [\-\-get] [\-\-xdcr\-from\-bucket <bucket>]
    [\-\-xdcr\-to\-bucket <bucket>] [\-\-xdcr\-cluster\-name <name>]
    [\-\-filter\-expression <regex>] [\-\-xdcr\-replicator <id>]
    [\-\-checkpoint\-interval <seconds>] [\-\-worker\-batch\-size <num>]
    [\-\-doc\-batch\-size <kilobytes>][\-\-failure\-restart\-interval <seconds>]
    [\-\-source\-nozzle\-per\-node <num>] [\-\-target\-nozzle\-per\-node <num>]
    [\-\-bandwidth\-usage\-limit <num>] [\-\-enable\-compression <num>]
    [\-\-stats\-interval <milliseconds>][\-\-optimistic\-replication\-threshold <bytes>]
    [\-\-log\-level <level>] [\-\-priority <High|Medium|Low>] [\-\-reset\-expiry <1|0>]
    [\-\-filter\-deletion <1|0>] [\-\-filter\-expiration <1|0>]
    [\-\-collection\-explicit\-mappings <1|0>] [\-\-collection\-migration <1|0>]
    [\-\-collection\-mapping\-rules <mappings>]
.fi
.br
.SH "DESCRIPTION"
.sp
This command is used to manage XDCR replications.
.SH "OPTIONS"
.sp
\-c, \-\-cluster
.RS 4
Specifies the hostname of a node in the cluster. See the HOST FORMATS
section for more information on specifying a hostname.
.RE
.sp
\-u, \-\-username <username>
.RS 4
Specifies the username of the user executing the command. If you do not have
a user account with permission to execute the command then it will fail with
an unauthorized error.
.RE
.sp
\-p, \-\-password <password>
.RS 4
Specifies the password of the user executing the command. If you do not have
a user account with permission to execute the command then it will fail with
an unauthorized error. If this argument is specified, but no password is
given then the command will prompt the user for a password through
non\-echoed stdin. You may also specify your password by using the
environment variable CB_REST_PASSWORD.
.RE
.sp
\-\-client\-cert <path>
.RS 4
The path to a client certificate used to authenticate when connecting to a
cluster. May be supplied with \f(CR\-\-client\-key\fP as an alternative to the
\f(CR\-\-username\fP and \f(CR\-\-password\fP flags.  See the CERTIFICATE AUTHENTICATION
section for more information.
.RE
.sp
\-\-client\-cert\-password <password>
.RS 4
The password for the certificate provided to the \f(CR\-\-client\-cert\fP flag, when
using this flag, the certificate/key pair is expected to be in the PKCS#12
format. See the CERTIFICATE AUTHENTICATION section for more information.
.RE
.sp
\-\-client\-key <path>
.RS 4
The path to the client private key whose public key is contained in the
certificate provided to the \f(CR\-\-client\-cert\fP flag. May be supplied with
\f(CR\-\-client\-cert\fP as an alternative to the \f(CR\-\-username\fP and \f(CR\-\-password\fP
flags. See the CERTIFICATE AUTHENTICATION section for more information.
.RE
.sp
\-\-client\-key\-password <password>
.RS 4
The password for the key provided to the \f(CR\-\-client\-key\fP flag, when using this
flag, the key is expected to be in the PKCS#8 format.  See the CERTIFICATE
AUTHENTICATION section for more information.
.RE
.sp
\-\-create
.RS 4
Creates a new XDCR replication.
.RE
.sp
\-\-delete
.RS 4
Deletes an XDCR replication.
.RE
.sp
\-\-pause
.RS 4
Pauses an XDCR replication.
.RE
.sp
\-\-list
.RS 4
Lists all XDCR replications.
.RE
.sp
\-\-resume
.RS 4
Resumes an XDCR replication.
.RE
.sp
\-\-settings
.RS 4
Sets advanced settings for an XDCR replication.
.RE
.sp
\-\-get
.RS 4
Gets the setting for a XDCR replication.
.RE
.sp
\-\-xdcr\-from\-bucket <bucket>
.RS 4
The name bucket to replicate data from.
.RE
.sp
\-\-xdcr\-to\-bucket <bucket>
.RS 4
The name bucket to replicate data to.
.RE
.sp
\-\-xdcr\-cluster\-name <name>
.RS 4
The name of the cluster reference to replicate to.
.RE
.sp
\-\-filter\-expression <regex>
.RS 4
A regular expression used to filter the replication stream.
.RE
.sp
\-\-filter\-skip\-restream
.RS 4
With the specified flag, XDCR will remove all checkpoints and restart the
replication such that all mutations that fit the new filter will be
re\-replicated to the target.
.RE
.sp
\-\-xdcr\-replicator <id>
.RS 4
The XDCR Replication ID. To get a list of replicator ID\(cqs use the \-\-list
flag.
.RE
.sp
\-\-checkpoint\-interval <seconds>
.RS 4
The interval between checkpoints in seconds. The value of this option must
be between 60 and 14,400.
.RE
.sp
\-\-worker\-batch\-size <num>
.RS 4
The worker batch size. The value of this option must be between 500 and
10,000.
.RE
.sp
\-\-doc\-batch\-size <kilobytes>
.RS 4
The document batch size in Kilobytes. The value of this option must be
between 10 and 100,000.
.RE
.sp
\-\-failure\-restart\-interval <seconds>
.RS 4
Interval for restarting failed XDCR connections in seconds. The value of
this option must be between 1 and 300.
.RE
.sp
\-\-optimistic\-replication\-threshold <bytes>
.RS 4
Document body size threshold in bytes used to trigger optimistic
replication.
.RE
.sp
\-\-source\-nozzle\-per\-node <num>
.RS 4
The number of source nozzles to each node in the target cluster. The
value of this option must be between 1 and 10.
.RE
.sp
\-\-target\-nozzle\-per\-node <num>
.RS 4
The number of outgoing nozzles to each node in the target cluster. The
value of this option must be between 1 and 10.
.RE
.sp
\-\-bandwidth\-usage\-limit <num>
.RS 4
The bandwidth limit for XDCR replications in mebibytes per second for this
replication.
.RE
.sp
\-\-enable\-compression <num>
.RS 4
Specifies whether or not XDCR compression is enabled. Set this option to
"1" to enable compression or "0" to disable compression. This feature is
only available in Couchbase Enterprise Edition and can only be used where
the target cluster supports compression.
.RE
.sp
\-\-log\-level <level>
.RS 4
The XDCR log level.
.RE
.sp
\-\-stats\-interval <milliseconds>
.RS 4
The interval for statistics updates in milliseconds.
.RE
.sp
\-\-priority <High|Medium|Low>
.RS 4
Specify the priority for the replication. The options are High, Medium or
Low. The default priority is High.
.RE
.sp
\-\-reset\-expiry <1|0>
.RS 4
When set to true, all mutations sent to the target cluster will have the
expiration set to zero. This means documents will not expire in target
cluster. This can be overridden by setting max\-ttl on the target bucket.
.RE
.sp
\-\-filter\-deletion <1|0>
.RS 4
When set to true, delete mutations will not be sent to the target cluster.
This means documents will not be deleted in the target cluster via delete
operations on the source cluster.
.RE
.sp
\-\-filter\-expiration <1|0>
.RS 4
When set to true, expiry mutations will not be sent to the target cluster.
This means documents will not be deleted in the target cluster via
expirations on the source cluster.
.RE
.SH "COLLECTION OPTIONS"
.sp
\-\-collection\-explicit\-mappings <1|0>
.RS 4
Enable or disable explicit collection mappings. See COLLECTION MAPPINGS
below for more information. This is an Enterprise Edition only feature.
This option cannot be turned on if collection migration is on.
.RE
.sp
\-\-collection\-migration <1|0>
.RS 4
Enable or disable XDCR migration mode. Explicit mappings must be set to
1 for this. This is an Enterprise Edition only feature. This option
cannot be turned on if collection explicit mappings is on.
.RE
.sp
\-\-collection\-mapping\-rules <mappings>
.RS 4
The mappings rules from source bucket to target bucket. The mappings are
JSON formatted string. See COLLECTION MAPPINGS below for more information.
This is an Enterprise Edition only feature.
.RE
.SH "HOST FORMATS"
.sp
When specifying a host for the couchbase\-cli command the following formats are expected:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CRcouchbase://<addr>\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CR<addr>:<port>\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\f(CRhttp://<addr>:<port>\fP
.RE
.sp
It is recommended to use the couchbase://<addr> format for standard
installations. The other two formats allow an option to take a port number which
is needed for non\-default installations where the admin port has been set up on
a port other that 8091.
.SH "CERTIFICATE AUTHENTICATION (MTLS AUTHENTICATION)"
.sp
This tool supports authenticating against a Couchbase Cluster by using certificate based authentication (mTLS
authentication). To use certificate based authentication a certificate/key must be supplied, there a currently
multiple ways this may be done.
.SS "PEM ENCODED CERTIFICATE/KEY"
.sp
An unencrypted PEM encoded certificate/key may be supplied by using:
\- \f(CR\-\-client\-cert <path>\fP
\- \f(CR\-\-client\-key <path>\fP
.sp
The file passed to \f(CR\-\-client\-cert\fP must contain the client certificate, and an optional chain required to authenticate
the client certificate.
.sp
The file passed to \f(CR\-\-client\-key\fP must contain at most one private key, the key can be in one of the following formats:
\- PKCS#1
\- PKCS#8
.sp
Currently, only the following key types are supported:
\- RSA
\- DSA
.SS "PEM ENCODED CERTIFICATE/PEM OR DER ENCRYPTED PKCS#8 KEY"
.sp
An encrypted PKCS#8 formatted key may be provided using:
\- \f(CR\-\-client\-cert <path>\fP
\- \f(CR\-\-client\-key <path>\fP
\- \f(CR\-\-client\-key\-password <password>\fP
.sp
The file passed to \f(CR\-\-client\-cert\fP must contain the client certificate, and an optional chain required to authenticate
the client certificate.
.sp
Currently, only the following key types are supported:
\- RSA
\- DSA
.SS "ENCRYPTED PKCS#12 CERTIFICATE/KEY"
.sp
An encrypted PKCS#12 certificate/key may be provided using:
\- \f(CR\-\-client\-cert <path>\fP
\- \f(CR\-\-client\-cert\-password <password>\fP
.sp
The file passed to \f(CR\-\-client\-cert\fP must contain the client certificate and exactly one private key. It may also contain
the chain required to authenticate the client certificate.
.sp
Currently, only the following key types are supported:
\- RSA
\- DSA
.SH "EXAMPLES"
.sp
To create a new XDCR replication from the "default" bucket to the "apps" bucket
on a remote cluster called "east". You can run the following command below.
Note that if you have not setup a remote cluster reference then you need to
do this first by running the \fBcouchbase\-cli\-xdcr\-setup\fP(1).
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli xdcr\-replicate \-c 192.168.1.5 \-u Administrator \(rs
   \-p password \-\-create \-\-xdcr\-cluster\-name east \-\-xdcr\-from\-bucket apps \(rs
   \-\-xdcr\-to\-bucket apps
.fam
.fi
.if n .RE
.sp
To list all of the current XDCR replication you can run the following command.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli xdcr\-replicate \-c 192.168.1.5 \-u Administrator \(rs
   \-p password \-\-list
.fam
.fi
.if n .RE
.sp
To delete an XDCR replication you first need to use the \-\-list flag to get the
replicator id. Once you get the replicator id (in this case we will assume it is
\f(CRf4eb540d74c43fd3ac6d4b7910c8c92f/default/default\fP) you can run the command below
to delete the replication.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli xdcr\-replicate \-c 192.168.1.5 \-u Administrator \(rs
   \-p password \-\-delete \(rs
   \-\-xdcr\-replicator=f4eb540d74c43fd3ac6d4b7910c8c92f/default/default
.fam
.fi
.if n .RE
.sp
To pause an XDCR replication you first need to use the \-\-list flag to get the
replicator id. Once you get the replicator id (in this case we will assume it is
\f(CRf4eb540d74c43fd3ac6d4b7910c8c92f/default/default\fP) you can run the command below
to pause the replication.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli xdcr\-replicate \-c 192.168.1.5 \-u Administrator \(rs
   \-p password \-\-pause \(rs
   \-\-xdcr\-replicator=f4eb540d74c43fd3ac6d4b7910c8c92f/default/default
.fam
.fi
.if n .RE
.sp
To resume an XDCR replication you first need to use the \-\-list flag to get the
replicator id. Once you get the replicator id (in this case we will assume it is
\f(CRf4eb540d74c43fd3ac6d4b7910c8c92f/default/default\fP) you can run the command below
to resume the replication.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli xdcr\-replicate \-c 192.168.1.5 \-u Administrator \(rs
   \-p password \-\-resume \(rs
   \-\-xdcr\-replicator=f4eb540d74c43fd3ac6d4b7910c8c92f/default/default
.fam
.fi
.if n .RE
.sp
To modify the settings of an XDCR replication you first need to use the \-\-list
flag to get the replicator id. Once you get the replicator id (in this case we
will assume it is \f(CRf4eb540d74c43fd3ac6d4b7910c8c92f/default/default\fP) you can run
the command if for example you wanted to change the document batch size to 2048
and failure restart interval to 60 seconds.
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli xdcr\-replicate \-c 192.168.1.5 \-u Administrator \(rs
   \-p password \-\-settings \-\-failure\-restart\-interval=60 \(rs
   \-\-xdcr\-replicator=f4eb540d74c43fd3ac6d4b7910c8c92f/default/default \(rs
     \-\-doc\-batch\-size=2048
.fam
.fi
.if n .RE
.SH "COLLECTION MAPPINGS"
.sp
By default, upgraded bucket\-to\-bucket replication includes implicit mapping of all
scope and collections replications of which the bucket contains to globally unique
entities on the remote cluster. This means that whatever collection exists in the
source will be implicitly mapped by name to the target, and the data replicated.
For example, if a namespace such as S1:C1 exists on the source, Implicit Mapping
states that the equivalent mapped entity of S1:C1 namespace should also exist on
the target. If brand\-new replicated systems that both support Collections are
created with Implicit Mapping without specifying anything regarding collections,
this is also the behavior of the system. If there is a default scope and/or default
collection, they will be mapped to the default scope/collection on the target cluster.
.sp
For users who require more detailed control over collections, they may choose to
use Explicit Mapping. Explicit mapping for a replication is specified by a set of
rules defined below.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table 1. Explicit Mapping Rules
.TS
allbox tab(:);
lt lt lt lt.
T{
.sp
Priority
T}:T{
.sp
Match Rule
T}:T{
.sp
Description
T}:T{
.sp
Syntax
T}
T{
.sp
0
T}:T{
.sp
S.C to S.C
T}:T{
.sp
Matches a single Scope:Collection to a target Scope:Collection
T}:T{
.sp
\f(CR{"s.c":"target_s.target_c"}\fP
T}
T{
.sp
1
T}:T{
.sp
S.C Deny List
T}:T{
.sp
Stops one singular Scope:Collection from being replicated
T}:T{
.sp
\f(CR{"s.c":null}\fP
T}
T{
.sp
2
T}:T{
.sp
Scope to Scope
T}:T{
.sp
Explicitly map one source scope to a target scope
T}:T{
.sp
\f(CR{"s":"target_s"}\fP
T}
T{
.sp
3
T}:T{
.sp
Scope Deny List
T}:T{
.sp
Stop one source scope from being replicated
T}:T{
.sp
\f(CR{"s": null}\fP
T}
.TE
.sp
.sp
Note that when migration mode is enabled Explicit Rule\-Based Mapping is used
instead. The Rule\-Based Mapping expressions have the same format as the filtering
expressions in advance filtering. Below are some example rules. Note that the filter
expression syntax is supported so a large range of expressions can be created:
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table 2. Example Rule\-Based Mapping Rules
.TS
allbox tab(:);
lt lt lt.
T{
.sp
Rule
T}:T{
.sp
Description
T}:T{
.sp
Syntax
T}
T{
.sp
Key
T}:T{
.sp
Matches a document based on the key and maps it to a collection
T}:T{
.sp
\f(CR{“REGEXP_CONTAINS(META().id, ‘^app1_’”:”Apps.App1”}\fP\fIMaps any document with a key starting with \f(CRapp1\fP\fP to the collection `Apps.App1`_
T}
T{
.sp
Field value match
T}:T{
.sp
Matches documents based on the values of one or more fields and maps it to a collection
T}:T{
.sp
\f(CR{“Region == ‘APAC’ AND Country == ‘Japan’”:”APAC.Japan”}\fP\fIMaps any document that has field \f(CRRegion\fP and \f(CRCountry\fP with respective values APAC and Japan
to the collection `APAC.Japan`\fP
T}
T{
.sp
Field exists
T}:T{
.sp
Matches any document that has the given field and maps it to a collection
T}:T{
.sp
\f(CR{“EXISTS(PhotosData)”:”\fIdefault.PhotoDocuments”}\fP_Maps any document that has the \f(CRPhotosData\fP field to the \f(CRPhotoDocuments\fP collections under the default scope\fP
T}
.TE
.sp
.SS "COLLECTION MAPPING EXAMPLES"
.sp
To enable explicit collection mapping for a bucket \fIdefault\fP that has a scope
with name \fIdatabases\fP and a collection called \fInosql\fP and want this to be
mapped in the target bucket to a scope \fIdatabase\-replica\fP and \fInosql\-replica\fP
we can use the following command:
.sp
.if n .RS 4
.nf
.fam C
$ couchbase\-cli xdcr\-replicate \-c 192.168.1.5 \-u Administrator \(rs
   \-p password \-\-settings \(rs
   \-\-xdcr\-replicator=f4eb540d74c43fd3ac6d4b7910c8c92f/default/default \(rs
   \-\-collection\-explicit\-mappings 1  \-\-collection\-mapping\-rules {"databases.nosql":"databases\-replica.nosql\-replica"}
.fam
.fi
.if n .RE
.sp
Note that explicit mapping rules cannot be used with collection migration mode.
.SH "ENVIRONMENT AND CONFIGURATION VARIABLES"
.sp
CB_REST_USERNAME
.RS 4
Specifies the username to use when executing the command. This environment
variable allows you to specify a default argument for the \-u/\-\-username
argument on the command line.
.RE
.sp
CB_REST_PASSWORD
.RS 4
Specifies the password of the user executing the command. This environment
variable allows you to specify a default argument for the \-p/\-\-password
argument on the command line. It also allows the user to ensure that their
password are not cached in their command line history.
.RE
.sp
CB_CLIENT_CERT
.RS 4
The path to a client certificate used to authenticate when connecting to a
cluster. May be supplied with \f(CRCB_CLIENT_KEY\fP as an alternative to the
\f(CRCB_USERNAME\fP and \f(CRCB_PASSWORD\fP variables. See the CERTIFICATE AUTHENTICATION
section for more information.
.RE
.sp
CB_CLIENT_CERT_PASSWORD
.RS 4
The password for the certificate provided to the \f(CRCB_CLIENT_CERT\fP variable,
when using this variable, the certificate/key pair is expected to be in the
PKCS#12 format. See the CERTIFICATE AUTHENTICATION section for more
information.
.RE
.sp
CB_CLIENT_KEY
.RS 4
The path to the client private key whose public key is contained in the
certificate provided to the \f(CRCB_CLIENT_CERT\fP variable. May be supplied with
\f(CRCB_CLIENT_CERT\fP as an alternative to the \f(CRCB_USERNAME\fP and \f(CRCB_PASSWORD\fP
variables. See the CERTIFICATE AUTHENTICATION section for more information.
.RE
.sp
CB_CLIENT_KEY_PASSWORD
.RS 4
The password for the key provided to the \f(CRCB_CLIENT_KEY\fP variable, when using
this variable, the key is expected to be in the PKCS#8 format.  See the
CERTIFICATE AUTHENTICATION section for more information.
.RE
.SH "SEE ALSO"
.sp
\fBcouchbase\-cli\-setting\-xdcr\fP(1),
\fBcouchbase\-cli\-xdcr\-setup\fP(1)
.SH "COUCHBASE\-CLI"
.sp
Part of the \fBcouchbase\-cli\fP(1) suite
.SH "AUTHOR"
.sp
Couchbase